//nascondi e mostra i canvas


$("#retrobtn").click(function () {

    $("#magliettafronte").hide();
    $("#magliettaretro").show();
    if ($("#frontebtn").hasClass("active") == true) {
        $("#frontebtn").removeClass("active");
        $("#retrobtn").addClass("active");

    }

});

$("#frontebtn").click(function () {
    $("#magliettaretro").hide();
    $("#magliettafronte").show();
    if ($("#retrobtn").hasClass("active") == true) {
        $("#retrobtn").removeClass("active");
        $("#frontebtn").addClass("active");

    }
});


// bottone elimina 

$(document).on('click', "#delete-item", function () {
    if (fronte.getActiveObject()) {
        fronte.remove(fronte.getActiveObject());
    }
});

// cambiare immagine maglietta


$(document).ready(function () {
    $('.nero').click(function () {
        $('#img_tshirt').attr('src', 'img/blacktee.png');
    });
});
$(document).ready(function () {
    $('.bianco').click(function () {
        $('#img_tshirt').attr('src', 'img/whitetee.png');
    });
});



//canvas fronte maglietta

var fronte = new fabric.Canvas('Fcanvas');
document.getElementById('fileInput').addEventListener("change", function (e) {
    var file = e.target.files[0];
    var reader = new FileReader();
    reader.onload = function (f) {
        var data = f.target.result;
        fabric.Image.fromURL(data, function (img) {
            let scale = 300 / img.width;

            img.set({
                scaleX: scale,
                scaleY: scale
            });


            fronte.add(img).renderAll();
            var a = fronte.setActiveObject(img);
            var dataURL = fronte.toDataURL({
                format: 'png',
                quality: 0.8
            });
        });
    };
    reader.readAsDataURL(file);
});


//
//$("#sendtext").click(function () {
//   var inputext = $('#txt_name').val();

//  var text = new fabric.Text(inputext, {
//left: 100,
//top: 100
// });
// canvas.add(text);
//});
//





// texteditor


fabric.Object.prototype.transparentCorners = false;
fabric.Object.prototype.padding = 5;




function Addtext() {
    var text = new fabric.IText('Aggiungi il testo qua', {
        fontSize: 16,
        left: 20,
        top: 20
    });
    fronte.add(text).setActiveObject(text);
}



addHandler('color', function (obj) {
    setStyle(obj, 'fill', this.value);
}, 'onchange');

addHandler('opacity', function (obj) {
    setStyle(obj, 'opacity', this.value);
}, 'onchange');

addHandler('font-family', function (obj) {
    setStyle(obj, 'fontFamily', this.value);
}, 'onchange');

addHandler('text-align', function (obj) {
    setStyle(obj, 'textAlign', this.value);
}, 'onchange');

addHandler('text-bg-color', function (obj) {
    setStyle(obj, 'textBackgroundColor', this.value);
}, 'onchange');

addHandler('text-lines-bg-color', function (obj) {
    setStyle(obj, 'backgroundColor', this.value);
}, 'onchange');

addHandler('text-stroke-color', function (obj) {
    setStyle(obj, 'stroke', this.value);
}, 'onchange');

addHandler('text-stroke-width', function (obj) {
    setStyle(obj, 'strokeWidth', this.value);
}, 'onchange');

addHandler('text-font-size', function (obj) {
    setStyle(obj, 'fontSize', this.value);
}, 'onchange');

addHandler('text-line-height', function (obj) {
    setStyle(obj, 'lineHeight', this.value);
}, 'onchange');

addHandler('text-cmd-bold', function (obj) {
    setStyle(obj, 'fontWeight', this.value);
}, 'onchange');

addHandler('text-cmd-italic', function (obj) {
    setStyle(obj, 'italic', this.value);
}, 'onchange');

addHandler('text-cmd-underline"', function (obj) {
    setStyle(obj, 'underline', this.value);
}, 'onchange');

addHandler('text-cmd-linethrough', function (obj) {
    setStyle(obj, 'line-through', this.value);
}, 'onchange');

addHandler('text-cmd-overline', function (obj) {
    setStyle(obj, 'overline', this.value);
}, 'onchange');



function setStyle(object, styleName, value) {
    if (object.setSelectionStyles && object.isEditing) {
        var style = {};
        style[styleName] = value;
        object.setSelectionStyles(style).setCoords();
    } else {
        object[styleName] = value;
    }
    fronte.renderAll();
};

function getStyle(object, styleName) {
    return (object.getSelectionStyles && object.isEditing) ?
        object.getSelectionStyles()[styleName] :
        object[styleName];
}

function addHandler(id, fn, eventName) {
    document.getElementById(id)[eventName || 'onclick'] = function () {
        var el = this;
        if (obj = fronte.getActiveObject()) {
            fn.call(el, obj);
            fronte.renderAll();
        }
    };
}


//retro maglietta

var retro = new fabric.Canvas('Rcanvas');
document.getElementById('fileInput').addEventListener("change", function (e) {
    var file = e.target.files[0];
    var reader = new FileReader();
    reader.onload = function (f) {
        var data = f.target.result;
        fabric.Image.fromURL(data, function (imgr) {
            let scale = 300 / img.width;

            imgr.set({
                scaleX: scale,
                scaleY: scale
            });


            retro.add(imgr).renderAll();
            var a = fronte.setActiveObject(img);
            var dataURL = fronte.toDataURL({
                format: 'png',
                quality: 0.8
            });
        });
    };
    reader.readAsDataURL(file);
});


// texteditor


fabric.Object.prototype.transparentCorners = false;
fabric.Object.prototype.padding = 5;




function AddtextR() {
    var text = new fabric.IText('Aggiungi il testo qua', {
        fontSize: 16,
        left: 20,
        top: 20
    });
    retro.add(text).setActiveObject(text);
}




function setStyle(object, styleName, value) {
    if (object.setSelectionStyles && object.isEditing) {
        var style = {};
        style[styleName] = value;
        object.setSelectionStyles(style).setCoords();
    } else {
        object[styleName] = value;
    }
    retro.renderAll();
};

function getStyle(object, styleName) {
    return (object.getSelectionStyles && object.isEditing) ?
        object.getSelectionStyles()[styleName] :
        object[styleName];
}

function addHandler(id, fn, eventName) {
    document.getElementById(id)[eventName || 'onclick'] = function () {
        var el = this;
        if (obj = fronte.getActiveObject()) {
            fn.call(el, obj);
            retro.renderAll();
        }
    };
}
